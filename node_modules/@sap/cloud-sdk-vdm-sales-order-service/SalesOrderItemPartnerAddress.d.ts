import { Entity, DefaultDeSerializers, DeSerializers, DeserializedType } from '@sap-cloud-sdk/odata-v2';
import { SalesOrderItemPartner, SalesOrderItemPartnerType } from './SalesOrderItemPartner';
import { SalesOrder, SalesOrderType } from './SalesOrder';
import { SalesOrderItem, SalesOrderItemType } from './SalesOrderItem';
/**
 * This class represents the entity "A_SalesOrderItemPartnerAddress" of service "API_SALES_ORDER_SRV".
 */
export declare class SalesOrderItemPartnerAddress<T extends DeSerializers = DefaultDeSerializers> extends Entity implements SalesOrderItemPartnerAddressType<T> {
    /**
     * Technical entity name for SalesOrderItemPartnerAddress.
     */
    static _entityName: string;
    /**
     * Default url path for the according service.
     */
    static _defaultServicePath: string;
    /**
     * All key fields of the SalesOrderItemPartnerAddress entity
     */
    static _keys: string[];
    /**
     * Sales and Distribution Document Number.
     * The number that uniquely identifies the sales, delivery, or billing document.
     * Maximum length: 10.
     */
    salesOrder: DeserializedType<T, 'Edm.String'>;
    /**
     * Item number of the SD document.
     * The number that uniquely identifies the item in the sales, shipping, or billing document.
     * Maximum length: 6.
     */
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    /**
     * Partner Function.
     * The abbreviated form of the name that identifies the partner function.
     * Maximum length: 2.
     */
    partnerFunction: DeserializedType<T, 'Edm.String'>;
    /**
     * Version ID for International Addresses.
     * Version indicator of an address.
     * You can maintain addresses in multiple versions. In this way, addresses can be stored in the system in different international display formats (such as Kanji or Latin letters).The version indicator is a part of the address key.You can use the standard version keys or enter your own version keys in the view V_SAPTSADV.For more information, see the section 'Print Formatting for Addresses' in the BAS documentation (see SAP note 383362).
     * Maximum length: 1.
     */
    addressRepresentationCode: DeserializedType<T, 'Edm.String'>;
    /**
     * Language Key.
     * The language key indicates
     * - the language in which texts are displayed,- the language in which you enter texts,- the language in which the system prints texts.
     * Maximum length: 2.
     * @nullable
     */
    correspondenceLanguage?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Full Name of Person.
     * This field contains the complete personal name. It is usually generated from the various name components (without title).
     * Maximum length: 80.
     * @nullable
     */
    addresseeFullName?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Name 1.
     * Address component: Name of an address.
     * Maximum length: 40.
     * @nullable
     */
    organizationName1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Name 2.
     * Maximum length: 40.
     * @nullable
     */
    organizationName2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Name 3.
     * Maximum length: 40.
     * @nullable
     */
    organizationName3?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Name 4.
     * Maximum length: 40.
     * @nullable
     */
    organizationName4?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * City.
     * City name as part of the address.
     * The city name is saved redundantly in another database field in upper- case letters, for search help.If the Postal regional structure ('city file') is active, the city name is checked against the Cities defined in the regional structure.
     * Maximum length: 40.
     * @nullable
     */
    cityName?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * District.
     * City or District supplement
     * In some countries, this entry is appended with a hyphen to the city name by the automatic address formatting, other countries, it is output on a line of its own or (e.g. in the USA) not printed.See the examples in the Address Layout Key documentation.
     * Maximum length: 40.
     * @nullable
     */
    districtName?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * City Postal Code.
     * Postal code as part of the address
     * If different postal codes are maintained for the PO Box and Street address of an address, this field contains the Street address postal code.
     * Maximum length: 10.
     * @nullable
     */
    postalCode?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Street.
     * Street name as part of the address.
     * The street name is saved, redundantly in upper case in another database field, for search help purposes.There are other fields for address parts which can be printed above or below the street. See Print the Street address.The house number and other supplements are usually maintained in their own fields. See Formatting the Street line.
     * Maximum length: 60.
     * @nullable
     */
    streetName?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Street 2.
     * Additional address field which is printed above the Street line.
     * The Street address contains two lines above the street and two lines below the street.See Print the Street address.This field is not always automatically printed, as it was subsequently added to the address structure.The print program or form may need to be adjusted.This exception applies to the following fields:Street2, Street3, Street4, Street5, c/o name, and to all address fields added after Release 4.5.
     * Maximum length: 40.
     * @nullable
     */
    streetPrefixName1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Street 3.
     * Additional address field which is printed above the Street line.
     * The Street address contains two lines above the street and two lines below the street.See Print the Street address.
     * Maximum length: 40.
     * @nullable
     */
    streetPrefixName2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Street 4.
     * Additional address field which is printed below the Street line.
     * The Street address contains two lines above the street and two lines below the street.See Print the Street address.
     * Maximum length: 40.
     * @nullable
     */
    streetSuffixName1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Street 5.
     * Additional address field which is printed under the Street line.
     * The Street address has two lines above the street and two lines below the steet.See Print the Street address.
     * Maximum length: 40.
     * @nullable
     */
    streetSuffixName2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * House Number.
     * House number as part of an address.
     * It is printed in the Street line.Other supplementary street information can be entered in the House number supplement or one of the Street2, Street3, Street4 or Street5 fields. See Print the Street address.A house number (e.g. 117) or a house number with supplement (e.g. 117a), or a house number range (e.g. 16-20), can be maintained in this field.
     * Maximum length: 10.
     * @nullable
     */
    houseNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Country/Region Key.
     * The country/region key contains information which the system uses to check entries such as the length of the postal code or bank account number.
     * The two-character ISO code in accordance with ISO 3166, which is delivered by SAP as a default, is usually used.It could also be the vehicle license plate country/region code or a typical country/region key, for example, in Germany the Federal statistics office key.The country/region keys are determined at system installation in the global settings.The definition of the country/region keys in the SAP system does not necessarily have to match political or state units.Since the country/region key does not have to correspond to the ISO code in all installations, programs that differ according to certain values of the country/region key cannot query the country/region key T005-LAND1, but have to program based on the ISO code T005 INTCA.
     * Maximum length: 3.
     * @nullable
     */
    country?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Region (State, Province, County).
     * In some countries, the region forms part of the address. The meaning depends on the country.
     * The automatic address formatting function prints the region in addresses in the USA, Canada, Italy, Brazil or Australia, and the county in Great Britain.For more information, see the examples in the documentation on the Address Layout Key.Meaning of the regional code in ...Australia       ->  ProvinceBrazil          ->  StateCanada          ->  ProvinceGermany         ->  StateGreat Britain   ->  CountyItaly           ->  ProvinceJapan           ->  PrefectureSwitzerland     ->  CantonUSA             ->  State.
     * Maximum length: 3.
     * @nullable
     */
    region?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Form-of-Address Key.
     * Key for form of address text.
     * You can also define a form of address text in Customizing.The form of address text can be maintained in different languages.
     * Maximum length: 4.
     * @nullable
     */
    formOfAddress?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Jurisdiction.
     * Specifies the  tax jurisdiction.
     * Maximum length: 15.
     * @nullable
     */
    taxJurisdiction?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Transportation zone to or from which the goods are delivered.
     * Sales and distribution:
     * Regional zone of Goods recipient.Purchasing:Regional zone of supplier.You can define regional zones to suit the requirements of your own business and country.Sales and distributionthe system automatically proposes a suitable route by using the transportation zone of the goods recipient in combination with other information about the delivery, such as theCountries of origin and destinationShipping conditionsTransportation groupIn the USA, for example, you can define regional zones to correspond to the US postal zip codes.
     * Maximum length: 10.
     * @nullable
     */
    transportZone?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * PO Box.
     * PO Box number as part of an address.
     * Only enter the PO Box number in this field. The text "PO Box" is provided in the recipient language by the system when you print the address.When you print an address, the "Street address" and the "PO Box address" are distinguished. The print program determines which of them has priority if both are maintained in an address record.Besides the PO Box number, the PO Box address uses the following fields:PO Box postal code, if specified (otherwise the normal postal code)PO Box city, if specified (otherwise the normal city)PO Box region, if specified (otherwise the normal region)PO Box country, if specified (otherwise the normal country)If the address is a "PO Box" (without a number), do not fill the "PO Box" field. Select the "PO Box w/o Number" indicator instead.You can also enter a company postal code for organizational addresses, instead of a PO Box. A separate field is predefined for this entry.For general information and examples about address formatting, see the documentation on the Address Structure Key.
     * Maximum length: 10.
     * @nullable
     */
    poBox?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * PO Box Postal Code.
     * Postal code that is required for a unique assignment of the PO box.
     * This field is used for countries where a different postal code applies to mail that is sent to the PO box rather than to the street address of a particular business partner.Postal codes for group major customers also have to be entered in the field for the PO box postal code since individual customers with a shared postal code for group major customers are differentiated by means of the PO box. Postal codes for major customers (= company postal codes), however, are assigned to one customer only and have to be entered in the field 'Company Postal Code'.
     * Maximum length: 10.
     * @nullable
     */
    poBoxPostalCode?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Email Address.
     * Internet mail address, also called e-mail address.
     * Example: user.name@company.comThe Internet mail address is used to send mail via the Internet world-wide; the protocol used is SMTP (Simple Mail Transfer Protocol).The Internet mail address format is specified in various RFCs (Internet Request for Comment), including RFCs 821 and 822.This is not an IP address (192.56.30.6).
     * Maximum length: 241.
     * @nullable
     */
    emailAddress?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Country/Region for Telephone/Fax Number.
     * The country/region for the telephone number or fax number is maintained here.
     * This specification is used to determine the correct country/region code. A normalized form of the telephone number or fax number is then derived and stored in a field for a program-driven search.In most cases, the telephone number or fax number refers directly to an address.If this is the case, when a new number is created, the country/region of the address is proposed.If this is not the case (for example, with address-independent communication data for a business partner), the country/region from the user parameter LND is proposed (if it is maintained).If the user parameter LND is not maintained, the country/region of the company address assigned in the user master data is proposed.If the country/region of the address changes, the country/region of the corresponding telephone number and fax address is not changed automatically.Example: A business partner moves abroad.If the telephone number is for a permanent connection, the telephone number also changes when the business partner moves and has to be maintained again in the system.If the telephone number is for a mobile telephone and the number is retained, the original country/region for this telephone number also has to be retained and must not be changed automatically to the new country/region of the address.
     * Maximum length: 3.
     * @nullable
     */
    mobilePhoneCountry?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Telephone No.: Dialing Code + Number.
     * Telephone number, consisting of dialling code and number, but without country dialling code.
     * If the telephone number consists of a company number and an extension, the extension must be entered in the field extension.Telephone number, as it is dialled from within the country.For the number "01234/567-0" enter the following:Telephone: 01234/567Estension: 0For the number "01234/567-891" enter the following:Telephone: 01234/567Extension: 891For the number "012-345-678" (678 as extension) enter the following:Telepone: 012-345Extension: 678In the following cases enter the complete number (without country dialling code) in the field Telephone:No part of the number can be regarded as an extension.You are not sure which part of the number can be regarded as an extension.
     * Maximum length: 30.
     * @nullable
     */
    mobileNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Country/Region for Telephone/Fax Number.
     * The country/region for the telephone number or fax number is maintained here.
     * This specification is used to determine the correct country/region code. A normalized form of the telephone number or fax number is then derived and stored in a field for a program-driven search.In most cases, the telephone number or fax number refers directly to an address.If this is the case, when a new number is created, the country/region of the address is proposed.If this is not the case (for example, with address-independent communication data for a business partner), the country/region from the user parameter LND is proposed (if it is maintained).If the user parameter LND is not maintained, the country/region of the company address assigned in the user master data is proposed.If the country/region of the address changes, the country/region of the corresponding telephone number and fax address is not changed automatically.Example: A business partner moves abroad.If the telephone number is for a permanent connection, the telephone number also changes when the business partner moves and has to be maintained again in the system.If the telephone number is for a mobile telephone and the number is retained, the original country/region for this telephone number also has to be retained and must not be changed automatically to the new country/region of the address.
     * Maximum length: 3.
     * @nullable
     */
    phoneNumberCountry?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Telephone No.: Dialing Code + Number.
     * Telephone number, consisting of dialling code and number, but without country dialling code.
     * If the telephone number consists of a company number and an extension, the extension must be entered in the field extension.Telephone number, as it is dialled from within the country.For the number "01234/567-0" enter the following:Telephone: 01234/567Estension: 0For the number "01234/567-891" enter the following:Telephone: 01234/567Extension: 891For the number "012-345-678" (678 as extension) enter the following:Telepone: 012-345Extension: 678In the following cases enter the complete number (without country dialling code) in the field Telephone:No part of the number can be regarded as an extension.You are not sure which part of the number can be regarded as an extension.
     * Maximum length: 30.
     * @nullable
     */
    phoneNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Telephone no.: Extension.
     * Telephone extension number
     * If the telephone number consists of a company number and an extension, the extension should be entered here.Enter the extension.The following rules apply for the format of telephone and fax numbers:The length of the entries in the field Telephone and Extension (Fax and Extension) cannot be more than 24 characters in total.Leading spaces are not allowed in the field Telephone or Fax or in the field Extension.Valid characters are:Numbers (0123456789)Letters (ABCDEFGHIJKLMNOPQRSTUVWXYZ)Following other characters:  /, (, ), - *, # and " " (space), but not as a leading space.If an + is entered as the first character, the system checks whether the specified number starts with a country code. If so, a warning message is displayed because the country code is automatically determined by the system and should not be stored in the Telephone number (Fax number) field.If an & is entered as the first character, the automatic check and formatting of the telephone number (fax number), as well as the determination of the country code, is suppressed.For the number "01234/567-0" enter the following:Telephone: 01234/567Estension: 0For the number "01234/567-891" enter the following:Telephone: 01234/567Extension: 891For the number "012-345-678" (678 as extension) enter the following:Telepone: 012-345Extension: 678In the following cases enter the complete number (without country dialling code) in the field Telephone:No part of the number can be regarded as an extension.You are not sure which part of the number can be regarded as an extension.
     * Maximum length: 10.
     * @nullable
     */
    phoneExtensionNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Country/Region for Telephone/Fax Number.
     * The country/region for the telephone number or fax number is maintained here.
     * This specification is used to determine the correct country/region code. A normalized form of the telephone number or fax number is then derived and stored in a field for a program-driven search.In most cases, the telephone number or fax number refers directly to an address.If this is the case, when a new number is created, the country/region of the address is proposed.If this is not the case (for example, with address-independent communication data for a business partner), the country/region from the user parameter LND is proposed (if it is maintained).If the user parameter LND is not maintained, the country/region of the company address assigned in the user master data is proposed.If the country/region of the address changes, the country/region of the corresponding telephone number and fax address is not changed automatically.Example: A business partner moves abroad.If the telephone number is for a permanent connection, the telephone number also changes when the business partner moves and has to be maintained again in the system.If the telephone number is for a mobile telephone and the number is retained, the original country/region for this telephone number also has to be retained and must not be changed automatically to the new country/region of the address.
     * Maximum length: 3.
     * @nullable
     */
    faxNumberCountry?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Fax Number: Dialing Code+Number.
     * Fax number, consisting of dialling code and number, but without country dialling code.
     * If the fax number consists of a company number and an extension, the extension must be entered in the field extension.Fax number, as it is to be dialled from within the same country.Enter the following for the number "01234/567-0":Fax: 01234/567Extension: 0Enter the following for the number "01234/567-891":Fax: 01234/567Extension: 891For the number "012-345-678" (678 as extension) enter the following:Fax: 012-345Extension: 678In the following cases, enter the complete number (without country dialing code) in the field Fax:No part of the number can be considered as an extension.You are not sure which part of the number can be considered as an extension.
     * Maximum length: 30.
     * @nullable
     */
    faxAreaCodeSubscriberNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Fax no.: Extension.
     * Fax extension number
     * If the fax number consists of a company number and an extension, the extension must be entered here.Enter the extensionThe following rules apply for the format of telephone and fax numbers:The length of the entries in the field Telephone and Extension (Fax and Extension) cannot be more than 24 characters in total.Leading spaces are not allowed in the field Telephone or Fax or in the field Extension.Valid characters are:Numbers (0123456789)Letters (ABCDEFGHIJKLMNOPQRSTUVWXYZ)Following other characters:  /, (, ), - *, # and " " (space), but not as a leading space.If an + is entered as the first character, the system checks whether the specified number starts with a country code. If so, a warning message is displayed because the country code is automatically determined by the system and should not be stored in the Telephone number (Fax number) field.If an & is entered as the first character, the automatic check and formatting of the telephone number (fax number), as well as the determination of the country code, is suppressed.Enter the following for the number "01234/567-0":Fax: 01234/567Extension: 0Enter the following for the number "01234/567-891":Fax: 01234/567Extension: 891For the number "012-345-678" (678 as extension) enter the following:Fax: 012-345Extension: 678In the following cases, enter the complete number (without country dialing code) in the field Fax:No part of the number can be considered as an extension.You are not sure which part of the number can be considered as an extension.
     * Maximum length: 10.
     * @nullable
     */
    faxExtensionNumber?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * One-to-one navigation property to the [[SalesOrderItemPartner]] entity.
     */
    toPartner?: SalesOrderItemPartner<T> | null;
    /**
     * One-to-one navigation property to the [[SalesOrder]] entity.
     */
    toSalesOrder?: SalesOrder<T> | null;
    /**
     * One-to-one navigation property to the [[SalesOrderItem]] entity.
     */
    toSalesOrderItem?: SalesOrderItem<T> | null;
}
export interface SalesOrderItemPartnerAddressType<T extends DeSerializers = DefaultDeSerializers> {
    salesOrder: DeserializedType<T, 'Edm.String'>;
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    partnerFunction: DeserializedType<T, 'Edm.String'>;
    addressRepresentationCode: DeserializedType<T, 'Edm.String'>;
    correspondenceLanguage?: DeserializedType<T, 'Edm.String'> | null;
    addresseeFullName?: DeserializedType<T, 'Edm.String'> | null;
    organizationName1?: DeserializedType<T, 'Edm.String'> | null;
    organizationName2?: DeserializedType<T, 'Edm.String'> | null;
    organizationName3?: DeserializedType<T, 'Edm.String'> | null;
    organizationName4?: DeserializedType<T, 'Edm.String'> | null;
    cityName?: DeserializedType<T, 'Edm.String'> | null;
    districtName?: DeserializedType<T, 'Edm.String'> | null;
    postalCode?: DeserializedType<T, 'Edm.String'> | null;
    streetName?: DeserializedType<T, 'Edm.String'> | null;
    streetPrefixName1?: DeserializedType<T, 'Edm.String'> | null;
    streetPrefixName2?: DeserializedType<T, 'Edm.String'> | null;
    streetSuffixName1?: DeserializedType<T, 'Edm.String'> | null;
    streetSuffixName2?: DeserializedType<T, 'Edm.String'> | null;
    houseNumber?: DeserializedType<T, 'Edm.String'> | null;
    country?: DeserializedType<T, 'Edm.String'> | null;
    region?: DeserializedType<T, 'Edm.String'> | null;
    formOfAddress?: DeserializedType<T, 'Edm.String'> | null;
    taxJurisdiction?: DeserializedType<T, 'Edm.String'> | null;
    transportZone?: DeserializedType<T, 'Edm.String'> | null;
    poBox?: DeserializedType<T, 'Edm.String'> | null;
    poBoxPostalCode?: DeserializedType<T, 'Edm.String'> | null;
    emailAddress?: DeserializedType<T, 'Edm.String'> | null;
    mobilePhoneCountry?: DeserializedType<T, 'Edm.String'> | null;
    mobileNumber?: DeserializedType<T, 'Edm.String'> | null;
    phoneNumberCountry?: DeserializedType<T, 'Edm.String'> | null;
    phoneNumber?: DeserializedType<T, 'Edm.String'> | null;
    phoneExtensionNumber?: DeserializedType<T, 'Edm.String'> | null;
    faxNumberCountry?: DeserializedType<T, 'Edm.String'> | null;
    faxAreaCodeSubscriberNumber?: DeserializedType<T, 'Edm.String'> | null;
    faxExtensionNumber?: DeserializedType<T, 'Edm.String'> | null;
    toPartner?: SalesOrderItemPartnerType<T> | null;
    toSalesOrder?: SalesOrderType<T> | null;
    toSalesOrderItem?: SalesOrderItemType<T> | null;
}
//# sourceMappingURL=SalesOrderItemPartnerAddress.d.ts.map