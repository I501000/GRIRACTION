import { Entity, DefaultDeSerializers, DeSerializers, DeserializedType } from '@sap-cloud-sdk/odata-v2';
import { SalesOrderItemBillingPlan, SalesOrderItemBillingPlanType } from './SalesOrderItemBillingPlan';
import { SalesOrderItemPartner, SalesOrderItemPartnerType } from './SalesOrderItemPartner';
import { SalesOrderItmPrecdgProcFlow, SalesOrderItmPrecdgProcFlowType } from './SalesOrderItmPrecdgProcFlow';
import { SalesOrderItemPrElement, SalesOrderItemPrElementType } from './SalesOrderItemPrElement';
import { SalesOrderItemRelatedObject, SalesOrderItemRelatedObjectType } from './SalesOrderItemRelatedObject';
import { SalesOrder, SalesOrderType } from './SalesOrder';
import { SalesOrderScheduleLine, SalesOrderScheduleLineType } from './SalesOrderScheduleLine';
import { SalesOrderItmSubsqntProcFlow, SalesOrderItmSubsqntProcFlowType } from './SalesOrderItmSubsqntProcFlow';
import { SalesOrderItemText, SalesOrderItemTextType } from './SalesOrderItemText';
/**
 * This class represents the entity "A_SalesOrderItem" of service "API_SALES_ORDER_SRV".
 */
export declare class SalesOrderItem<T extends DeSerializers = DefaultDeSerializers> extends Entity implements SalesOrderItemType<T> {
    /**
     * Technical entity name for SalesOrderItem.
     */
    static _entityName: string;
    /**
     * Default url path for the according service.
     */
    static _defaultServicePath: string;
    /**
     * All key fields of the SalesOrderItem entity
     */
    static _keys: string[];
    /**
     * Sales Order.
     * Maximum length: 10.
     */
    salesOrder: DeserializedType<T, 'Edm.String'>;
    /**
     * Sales Order Item.
     * Maximum length: 6.
     */
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    /**
     * Higher-Level Item in Bill of Material Structures.
     * The number of the higher-level item to which this item belongs in a hierarchy.
     * Items can be organized hierarchically. When you assign a sub-item to another item, the other item becomes a higher-level item.Enter the number of a higher-level item.
     * Maximum length: 6.
     * @nullable
     */
    higherLevelItem?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ID for higher-level item usage.
     * Maximum length: 1.
     * @nullable
     */
    higherLevelItemUsage?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Sales Document Item Category.
     * A classification that distinguishes between different types of item (for example, free of charge items and text items) and determines how the system processes the item.
     * The system proposes an item category. If alternatives are defined for your system, you can change the item category manually in the sales document.If, for example, you identify an item as a free or charge item, you tell the system, in this case, to ignore normal pricing procedures.
     * Maximum length: 4.
     * @nullable
     */
    salesOrderItemCategory?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Short Text for Sales Order Item.
     * A short description of the item.
     * Short texts are used throughout sales order processing, shipping, and billing. They also appear on printed order confirmations.The system proposes the short text from the material master record. If you have included a short text in a customer-material info record, it replaces the material master text during sales document processing. You can change the text at the item level in the sales document or during delivery processing.
     * Maximum length: 40.
     * @nullable
     */
    salesOrderItemText?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Customer Reference.
     * Number that the customer uses to uniquely identify a purchasing document (e.g. an inquiry or a purchase order).
     * The number creates the link between the customer purchase order and the sales document that you create. You can use the number used by the customer during correspondence with the customer to find certain document information. If the number refers to a purchase order, you can also print it on the documents that you send to the customer (e.g. on the delivery note).
     * Maximum length: 35.
     * @nullable
     */
    purchaseOrderByCustomer?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Ship-to Party's Customer Reference.
     * Number used by the end customer for unique identification of the purchasing document (e.g. inquiry or purchase).
     * The number is the link between the end customer's purchase order and the sales documents that you have created. You can use the end customer's number for correspondence with the customer, in particular for finding certain document information. If the number refers to a purchase order, you can also print documents that you wish to send to the end customer, such as the delivery note.
     * Maximum length: 35.
     * @nullable
     */
    purchaseOrderByShipToParty?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Item Number of the Underlying Purchase Order.
     * The item number (from a purchase order, for example) that the customer uses to uniquely identify the item.
     * Enter the item number from the customer's document. The item number may vary from the item number that appears in your own sales document.
     * Maximum length: 6.
     * @nullable
     */
    underlyingPurchaseOrderItem?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * External Item ID.
     * Maximum length: 40.
     * @nullable
     */
    externalItemId?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Number.
     * Alphanumeric key uniquely identifying the material.
     * Maximum length: 40.
     * @nullable
     */
    material?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Number Used by Customer.
     * Uniquely identifies the material from the customer's point of view.
     * If the customer uses a different identifier than the one you use for the material, you can include this information in a customer-material info record. You can also include in this record specific shipping details, such asMinimum delivery quantityPartial delivery conditionsEnter a value from an existing customer-material info record.
     * Maximum length: 35.
     * @nullable
     */
    materialByCustomer?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Date for Pricing and Exchange Rate.
     * The date that determines date-related pricing elements, such as conditions and foreign exchange rate.
     * You can use the pricing date as a selection criterion when you process billing documents collectively.The system proposes the current date. You can change it manually in the document. If you change the pricing date, the system recalculates pricing for the entire document. If the date is in the past, you receive a warning before you can continue.Determining the ProposalIn the order: You can customize the order type to determine a proposal, such as the current date or the requested delivery date as the pricing date.In the billing document: The billing date is proposed as the pricing date.
     * @nullable
     */
    pricingDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Pricing Reference Material.
     * Material master record that the system uses as a reference for pricing purposes.
     * The conditions that apply to the pricing reference material also apply to the material in whose material master record the pricing reference material is stored.A pricing reference material must always have its own material master record.
     * Maximum length: 40.
     * @nullable
     */
    pricingReferenceMaterial?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Billing Plan Number / Invoicing Plan Number.
     * Maximum length: 10.
     * @nullable
     */
    billingPlan?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Requested Quantity.
     * Specifies the quantity of a product a customer would like to receive for an item in a sales document. The quantity is expressed in sales units (for example, bottles).
     * @nullable
     */
    requestedQuantity?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Unit of the Requested Quantity.
     * Specifies the unit of measure in which a product is sold.
     * Maximum length: 3.
     * @nullable
     */
    requestedQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SAP Unit Code for Requested Quantity.
     * Unit of measure (SAP code) for the requested quantity.
     * For the requested quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    requestedQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ISO Unit Code for Requested Quantity.
     * Unit of measure (ISO code) for the requested quantity.
     * For the requested quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    requestedQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Sales Unit.
     * Unit of measure  in which the material is sold.
     * Maximum length: 3.
     * @nullable
     */
    orderQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SAP Unit Code for Order Quantity.
     * Unit of measure (SAP code) for the order quantity.
     * For the order quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    orderQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ISO Unit Code for Order Quantity.
     * Unit of measure (ISO code) for the order quantity.
     * For the order quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    orderQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Cumulative Confirmed Quantity in Sales Unit.
     * The cumulative item quantity that the system confirms for delivery after checking the availability of inventory. The quantity is expressed in sales units.
     * If there is no availability check, the quantity in this field is the same as the cumulative order quantity.
     * @nullable
     */
    confdDelivQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Gross Weight of the Item.
     * The total gross weight of the item. The gross weight represents the net weight plus the weight of packaging.
     * The system calculates the gross weight based on the order quantity for the item and the gross weight proposed from the material master record.If the item has more than one schedule line, the system uses the total order quantity of all schedule lines to calculate the gross weight. In sales documents where schedule lines are not allowed (contracts, for example), the system calculates the gross weight using the target quantity.You can change the value manually at the item level.
     * @nullable
     */
    itemGrossWeight?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Net Weight of the Item.
     * The total net weight for the item. The net weight represents the gross weight less the weight of packaging.
     * The system calculates the net weight based on the order quantity for the item and the net weight proposed from the material master record. If the item has more than one schedule line, the system uses the total order quantity of all schedule lines to calculate the net weight. In sales documents where schedule lines are not allowed (contracts, for example), the system calculates the net weight using the target quantity.You can change the value manually at the item level.The gross weight of a refrigerator and its packaging (a cardboard box including protective padding) is 350 pounds. The packaging weighs 25 pounds. In this case, the net weight is 325 pounds.
     * @nullable
     */
    itemNetWeight?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Unit of Weight.
     * Unit referring to the gross weight or net weight of the material.
     * If you specify a weight, you must enter the corresponding unit of weight here.
     * Maximum length: 3.
     * @nullable
     */
    itemWeightUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SAP Unit Code for Item Weight.
     * Unit of measure (SAP code) for the item weight.
     * For the item weight, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    itemWeightSapUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ISO Unit Code for Item Weight.
     * Unit of measure (ISO code) for the item weight.
     * For the item weight, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    itemWeightIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Volume of the item.
     * The total volume for the item.
     * The system calculates the volume based on the order quantity for the item and the volume proposed from the material master record. If the item has more than one schedule line, the system uses the total order quantity of all schedule lines to calculate the volume. In sales documents where schedule lines are not allowed (contracts, for example), the system calculates the volume using the target quantity.You can change the value manually at the item level.
     * @nullable
     */
    itemVolume?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Volume Unit.
     * Unit referring to the volume of the material.
     * If you specify a volume, you have to enter the corresponding volume unit here.
     * Maximum length: 3.
     * @nullable
     */
    itemVolumeUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SAP Unit Code for Item Volume.
     * Unit of measure (SAP code) for the item volume.
     * For the item volume, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    itemVolumeSapUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ISO Unit Code for Item Volume.
     * Unit of measure (ISO code) for the item volume.
     * For the item volume, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    itemVolumeIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SD Document Currency.
     * The currency that applies to the document (for example, to a sales order or an invoice).
     * The system proposes the document currency from the customer master record of the sold-to party. You can change the currency manually in the document. If you change the currency, the system recalculates prices for the entire document.
     * Maximum length: 5.
     * @nullable
     */
    transactionCurrency?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Net Value of the Order Item in Document Currency.
     * The net value of the item, after any discounts and surcharges are taken into account. Sales taxes are not included. The value is expressed in the document currency.
     * @nullable
     */
    netAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Overall Reference Status (Item).
     * The overall processing status of the referenced item.
     * The system determines the overall processing status of the item by taking into accountThe status of the referenced item (whether it is relevant for reference, and, if so, to what extent it has been referenced)The rejection status of the itemThe status message can tell you, for example, that an unreferenced item has nevertheless been "completed" because it has been rejected.
     * Maximum length: 1.
     * @nullable
     */
    totalSdDocReferenceStatus?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Reference Status (Item).
     * Shows if, and to what extent, the item has already been referenced by other sales documents.
     * The status message tells you whether one or more other sales documents have referenced this item partially, completely, or not at all.You create a sales order by copying an item from a quotation. However, when you process the order, you reduce the item quantity. If you later check the reference status for this quotation item, the system tells you that it has been partially referenced.
     * Maximum length: 1.
     * @nullable
     */
    sdDocReferenceStatus?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Reason for material substitution.
     * Specifies the reason why the system automatically carried out material substitution.
     * During a Christmas sales promotion, you want the system to substitute your normal stock with stock that has seasonal packaging. In this case, the system displays the relevant reason for substitution (for example: "Seasonal promotion").
     * Maximum length: 4.
     * @nullable
     */
    materialSubstitutionReason?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group.
     * Key that you use to group together several materials or services with the same attributes, and to assign them to a particular material group.
     * You can use material groups to:Restrict the scope of analysesSearch specifically for material master records via search helps.
     * Maximum length: 9.
     * @nullable
     */
    materialGroup?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Price Group.
     * A way of grouping materials to which you want to apply the same  condition.
     * You can create condition records for a material price group using the following condition types:Material price group (for example, all non-food products)A combination of customer and material price groupA combination of customer price group and material price group (for example, all wholesale customers and all non-food products).
     * Maximum length: 2.
     * @nullable
     */
    materialPricingGroup?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group 1.
     * You can use material groups when maintaining a material master record. Since these material groups are not used in the standard SAP System, you can use them as required, for example, for analyses.
     * Maximum length: 3.
     * @nullable
     */
    additionalMaterialGroup1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group 2.
     * You can use material groups when maintaining a material master record. Since these material groups are not used in the standard SAP System, you can use them as required, for example, for analyses.
     * Maximum length: 3.
     * @nullable
     */
    additionalMaterialGroup2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group 3.
     * You can use material groups when maintaining a material master record. Since these material groups are not used in the standard SAP System, you can use them as required, for example, for analyses.
     * Maximum length: 3.
     * @nullable
     */
    additionalMaterialGroup3?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group 4.
     * You can use material groups when maintaining a material master record. Since these material groups are not used in the standard SAP System, you can use them as required, for example, for analyses.
     * Maximum length: 3.
     * @nullable
     */
    additionalMaterialGroup4?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Material Group 5.
     * You can use material groups when maintaining a material master record. Since these material groups are not used in the standard SAP System, you can use them as required, for example, for analyses.
     * Maximum length: 3.
     * @nullable
     */
    additionalMaterialGroup5?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Billing Date.
     * The date on which the billing is processed and booked for accounting purposes.
     * You can use the billing date as one of the selection criteria when you process billing documents collectively.If invoice dates are defined for the customer, the system proposes the billing date from the invoice date calendar. If no invoice dates are agreed, then the actual goods issue date is formed on the basis of delivery related billing. In order related billing, the billing date of the order forms the basis of the billing date.If you are billing services, the system proposes the date of services rendered. You can change the date manually in the sales document.If you are using a billing plan to bill a project, the system can propose billing dates for the billing plan on the basis of planned or actual dates in the corresponding milestone.In a billing plan for a maintenance or rental contract, you can specify rules by which the system determines billing dates on the basis of other dates in the contract.
     * @nullable
     */
    billingDocumentDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Contract Account Number.
     * Key that uniquely identifies a contract account per client.
     * The postings in Contract Accounts Receivable and Payable are always assigned to a contract account and a business partner.In the contract account master record, specifically for each business partner, you can define procedures that are to be used for further processing of line items. These include for example, payment methods, dunning procedure, tolerances.NoteFor utility and insurance companies, a contract is assigned to exactly one contract account. However several accounts - depending on contract account type can be assigned to one contract account.
     * Maximum length: 12.
     * @nullable
     */
    contractAccount?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Additional Value Days.
     * The number of days between the billing date and the date on which the terms of payment for the sales document become effective.
     * If you enter a value in this field, you cannot enter a date in the fixed value date field.
     * Maximum length: 2.
     * @nullable
     */
    additionalValueDays?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Date on which services are rendered.
     * The date of services rendered that determines when the system calculates taxes (for example, sales tax) for the material.
     * If you deliver products, the date of services rendered corresponds to the  goods issue date and you do not have to enter a date in this field. If you provide a service, however, and you are billing hours, you can enter a date manually. You can use the date of services rendered as one of the selection criteria when you process billing documents collectively.
     * @nullable
     */
    servicesRenderedDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Batch Number.
     * Assigns a material that is manufactured in batches or production lots to a specific batch.
     * Maximum length: 10.
     * @nullable
     */
    batch?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Plant (Own or External).
     * Key that uniquely identifies a plant.
     * Maximum length: 4.
     * @nullable
     */
    productionPlant?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Storage Location.
     * Number of the storage location in which the material is stored. A plant may contain one or more storage locations.
     * Maximum length: 4.
     * @nullable
     */
    storageLocation?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Delivery Group (Items are delivered together).
     * A combination of items that should be delivered together.
     * The system uses delivery groups to check the availability of items that should be delivered together. The delivery date of the latest schedule line in the delivery group is taken as the general date for the whole group.During sales order processing, you can enter a number (up to three digits) that identifies a delivery group. The number is freely definable.If necessary, the system adjusts requirements that have already been created and changes the material availability dates for individual items to the delivery date that it has determined for the group.If a computer, a monitor, and a keyboard are usually delivered together, you can define the three items as a delivery group.If an item has more than one schedule line with a confirmed quantity, then the system deletes all undelivered schedule lines up to the last one. The system automatically carries over the quantities from the deleted schedule lines into the last one. If necessary, the system changes the delivery date of the last schedule line to that of the delivery group.
     * Maximum length: 3.
     * @nullable
     */
    deliveryGroup?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Shipping Point / Receiving Point.
     * The physical location (for example, a warehouse or collection of loading ramps) from which you ship the item.
     * You can predefine shipping/receiving points in the system, based on different combinations ofPlantsShipping conditionsLoading groupsDuring delivery processing, the shipping/receiving point is the most important criterion that you use to select deliveries.A delivery can be shipped from only one shipping point or received at only one receiving point.If you want to provide more detailed information about a shipping point you can specify a loading point (for example, one of a number of different loading ramps).If, for example, you want to ship refrigerated goods to a certain customer by rail, the system proposes a shipping point with a suitable location and equipment for loading refrigerated goods onto rail cars.The system can propose a shipping/receiving point. If valid alternatives are predefined in your system, you can change the shipping/receiving point manually.
     * Maximum length: 4.
     * @nullable
     */
    shippingPoint?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Shipping Type.
     * Shipping type (for example, by road or rail) that has been selected for the transportation of the goods for the shipment legs.
     * During automatic shipment leg determination, all legs created or only the main, direct, or return legs are assigned to this shipping type, depending on the type of leg determination.You can enter the shipment type for the main, direct or return legs in the shipping header. The value is proposed depending on the requirement in the shipment type.By setting the status "planned", you have the shipping type copied from the respective deliveries into the shipment header, provided:The shipping type is identical in all the deliveries.The shipping type in the shipment header is not already filled.See also: Leg determination.
     * Maximum length: 2.
     * @nullable
     */
    shippingType?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Delivery Priority.
     * The delivery priority assigned to an item.
     * You can assign delivery priority to either a particular material or to a combination of customer and material. When you process deliveries collectively, you can use delivery priority as one of the selection criteria.
     * Maximum length: 2.
     * @nullable
     */
    deliveryPriority?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Delivery Date Rule.
     * Indicates when the ordered goods should be delivered.
     * You can choose one of the following options:The goods should be delivered on the requested delivery date or later. Note that there is no guarantee that the goods will not be delivered earlier.The goods must be delivered exactly on the confirmed delivery date.The goods must be delivered by the confirmed delivery date (that is, on the date or earlier).You can set the delivery date rule on header level to set a default for any items that you create afterwards.In Transportation Management (TM), this field has the following implications:If you want the goods to be delivered on the requested delivery date or later, the delivery date/time is used as the earliest requested delivery date/time of the freight unit which contains the sales order item.If you want the goods to be delivered on the confirmed delivery date, the start of the delivery date is used as the earliest acceptable delivery date/time and the end of the delivery date as the latest acceptable delivery date/time of the freight unit which contains the sales order item.If you want the goods to be delivered by the confirmed delivery date, the end of the delivery date is used as the latest acceptable delivery date/time of the freight unit which contains the sales order item.Note: If you want to the goods to be delivered on or by the confirmed delivery date, the system ignores the rule for pick-up and delivery window and the condition for pick-up and delivery window determination which you have defined in the freight unit type for the delivery stop.
     * Maximum length: 1.
     * @nullable
     */
    deliveryDateTypeRule?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Incoterms (Part 1).
     * Commonly used trading terms that comply with the standards established by the International Chamber of Commerce (ICC).
     * Incoterms specify internationally recognized procedures that the shipper and the receiving party must follow for the shipping transaction to be completed successfully.If goods are shipped through a port of departure, the appropriate Incoterm might be: FOB ("Free On Board"). You can provide further details (for example, the name of the port) in the secondary Incoterm field: FOB Boston, for example.
     * Maximum length: 3.
     * @nullable
     */
    incotermsClassification?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Incoterms (Part 2).
     * Additional information for the primary Incoterm.
     * If the primary Incoterm is, for example, FOB ("Free on Board"), then the second field provides details of the port from which the delivery leaves (for example, "FOB Boston").
     * Maximum length: 28.
     * @nullable
     */
    incotermsTransferLocation?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Incoterms Location 1.
     * Provides additional information for the primary Incoterm. For Incoterms 2010, this field represents:
     * 1. For sea and inland waterway transport - Port of Shipment or Port of Destination2. For any mode of transport - Place of Delivery 2010 or Place of DestinationFor non-C clauses, both costs and risk are transferred from the seller to the buyer at location 1.For C clauses, the costs are transferred at location 1 and the risk is transferred at location 2.Incoterms are divided as follows:Group 1: Rules for any mode or modes of transport (including by vessel)Incoterm Incoterm Description  Location 1 EXW Ex Works  Place of DeliveryFCA Free Carrier  Place of DeliveryCPT Carriage Paid To  Place of DestinationCIP Carriage & Insurance Paid To  Place of DestinationDAF Delivered at Frontier  Place of DeliveryDDP Delivered Duty Paid  Place of DestinationDDU Delivered Duty Unpaid  Place of DestinationGroup 2: Rules for sea and inland waterwaysIncoterm Incoterm Description Location 1 FAS Free Alongside Ship Port of ShipmentFOB Free On Board Port of ShipmentCFR Cost & Freight Port of DestinationCIF Cost Insurance & Freight Port of DestinationDEQ Delivered Eq Quay (Duty Paid) Port of DestinationDES Delivered Ex Ship Port of DestinationIf the primary incoterm is specified as FOB “Free on Board”, the second field provides details of the port from which the delivery leaves, such as FOB Boston.
     * Maximum length: 70.
     * @nullable
     */
    incotermsLocation1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Incoterms Location 2.
     * Provides additional information for the Incoterms. This field is only available for C-Clauses (if customized appropriately). Note the following for the incoterms versions below:
     * No Version:This field is disabledIncoterm Version 2000This field is disabled as part of standard delivery unless a customer decides to enable it by the way of Customizing for Sales and Distribution under Master Data -> Business Partners -> Customers -> Billing Document -> Incoterms -> Map Incoterms to Versions.Incoterm Version 2010For this version, the field represents:Sea and inland waterway transport - Port of ShipmentAny mode of transport - Place of Delivery2010 Incoterms are divided as follows:Group 1: Rules for any mode or modes of transport (including by vessel)Incoterm Incoterm Description Location 2CPT Carriage Paid To Place of DeliveryCIP Carriage & Insurance Paid To Place of DeliveryGroup 2: Rules for sea and inland waterwaysIncoterm Incoterm Description Location 2CFR Cost & Freight Port of ShipmentCIF Cost Insurance & Freight Port of Shipment.
     * Maximum length: 70.
     * @nullable
     */
    incotermsLocation2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Amount in Document Currency.
     * The total sales taxes, expressed in the document currency.
     * @nullable
     */
    taxAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification1?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification2?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification3?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification4?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification5?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification6?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification7?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification8?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Tax Classification for Material.
     * Maximum length: 1.
     * @nullable
     */
    productTaxClassification9?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Account Assignment Group for Material.
     * Group of materials with the same accounting requirements.
     * Used by the system when creating an accounting document from a billing document to determine the revenue or sales deduction account.
     * Maximum length: 2.
     * @nullable
     */
    matlAccountAssignmentGroup?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Cost in Document Currency.
     * The cost of an item in a delivery-related billing documents. The cost is determined during the posting of goods issue.
     * @nullable
     */
    costAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Terms of Payment Key.
     * Key for defining payment terms composed of cash discount percentages and payment periods.
     * It is used in sales orders, purchase orders, and invoices. Terms of payment provide information for:Cash managementDunning proceduresPayment transactionsData can be entered in the field for the terms of payment key in various ways as you enter a business transaction:In most business transactions, the system defaults the key specified in the master record of the customer/vendor in question.In some transactions (for example, credit memos), however, the system does not default the key from the master record. Despite this, you can use the key from the customer/vendor master record by entering "*" in the field.Regardless of whether or not a key is defaulted from the master record, you can manually enter a key during document entry at:item level in sales ordersheader level in purchase orders and invoicesMaster records have separate areas for Financial Accounting, Sales, and Purchasing. You can specify different terms of payment keys in each of these areas. When you then enter a business transaction, the application in question will use the key specified in its area of the master record.
     * Maximum length: 4.
     * @nullable
     */
    customerPaymentTerms?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Fixed Value Date.
     * The date on which the terms of payment related to the sales document become effective.
     * If you enter a date in this field, you cannot enter a value in the additional value days field.
     * @nullable
     */
    fixedValueDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Customer Group.
     * Identifies a particular group of customers (for example, wholesale or retail) for the purpose of pricing or generating statistics.
     * Maximum length: 2.
     * @nullable
     */
    customerGroup?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Reason for Rejection of Sales Documents.
     * The reason for rejecting a sales document (for example, a sales quotation or a sales order).
     * The rejection can come from your organization (for example, you can reject a customer request for a credit memo because it is unreasonable) or from the customer (for example, the customer rejects a quotation because the price is too high). The following list shows the effects on different document types after you enter a reason for rejection:Inquiries and quotations: no further references by other documentsSales orders: no further delivery of itemsContracts: no further creation of release ordersCredit and debit memo requests: no further processing of credit or debit memosEnter one of the values predefined for your system.If you enter a reason for rejection, the system automatically cancels any MRP requirements previously generated for the items.
     * Maximum length: 2.
     * @nullable
     */
    salesDocumentRjcnReason?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Billing Block for Item.
     * Indicates if the item is blocked for billing.
     * To block an item for billing, enter one of the values predefined for your system.You can block an item for billing so that, for example, terms of payment or prices can be checked before further processing takes place.
     * Maximum length: 2.
     * @nullable
     */
    itemBillingBlockReason?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Relevant for POD processing.
     * This indicator controls proof of delivery (POD) processing.
     * @nullable
     */
    slsDocIsRlvtForProofOfDeliv?: DeserializedType<T, 'Edm.Boolean'> | null;
    /**
     * Work Breakdown Structure Element (WBS Element).
     * Key that identifies a WBS element.
     * Maximum length: 24.
     * @nullable
     */
    wbsElement?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Profit Center.
     * Key which together with the controlling area uniquely identifies a profit center.
     * Maximum length: 10.
     * @nullable
     */
    profitCenter?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Exchange Rate for Postings to Financial Accounting.
     * Specifies the currency exchange rate between document currency and local currency.
     * When a billing document is posted to financial accounting, the system also forwards this exchange rate to enable subsequent processing.Usually, the system uses the billing document's billing date as the exchange rate date for determining this exchange rate. If, however, the exchange rate has been set as fixed (indicated by the Set Exchange Rate field), the exchange rate of the preceding sales or billing document (for example, the sales order) is used instead. Please note the following regarding this field: When local currency and document currency are identical, the exchange rate is 1. Because the billing document's billing date is used as the exchange rate date, this has the following consequences: A change of the billing date usually causes the exchange rate to be redetermined based on this new exchange rate date.  The only exception to this rule is when the exchange rate has been set as fixed (indicated by the Set Exchange Rate field). In this case, the exchange rate specified in the preceding sales or billing document is used. Your system is configured in such a way that it expects:No prefix (leading sign) for direct ratesA "" as prefix (leading sign) for direct ratesNo prefix for indirect ratesA "" as prefix for indirect rates.
     * @nullable
     */
    accountingExchangeRate?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Document Number of Reference Document.
     * Identifies the sales order to which the delivery refers.
     * Maximum length: 10.
     * @nullable
     */
    referenceSdDocument?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Item Number of the Reference Item.
     * The number of the sales order item to which the delivery item refers.
     * Maximum length: 6.
     * @nullable
     */
    referenceSdDocumentItem?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Overall Processing Status (Item).
     * Displays the overall processing status of the item.
     * The system determines the overall status from all statuses (for example, delivery and billing) for this item. The status message tells you whether processing of the item is open, in progress, or complete.
     * Maximum length: 1.
     * @nullable
     */
    sdProcessStatus?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Delivery Status (Item).
     * Displays the delivery status of the item.
     * The status line tells you if the item is not yet delivered, is partly delivered, is completely delivered, or is not relevant for delivery.
     * Maximum length: 1.
     * @nullable
     */
    deliveryStatus?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Order-Related Billing Status (Item).
     * The order-related billing status shows to what extent an item has been processed for billing.
     * You determine whether an item is billed as an order-related or delivery-related item when you define item category defaults through the Customizing menus.Credit and debit memo items, for example, are billed as order-related items.
     * Maximum length: 1.
     * @nullable
     */
    orderRelatedBillingStatus?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * One-to-one navigation property to the [[SalesOrderItemBillingPlan]] entity.
     */
    toBillingPlan?: SalesOrderItemBillingPlan<T> | null;
    /**
     * One-to-many navigation property to the [[SalesOrderItemPartner]] entity.
     */
    toPartner: SalesOrderItemPartner<T>[];
    /**
     * One-to-many navigation property to the [[SalesOrderItmPrecdgProcFlow]] entity.
     */
    toPrecedingProcFlowDocItem: SalesOrderItmPrecdgProcFlow<T>[];
    /**
     * One-to-many navigation property to the [[SalesOrderItemPrElement]] entity.
     */
    toPricingElement: SalesOrderItemPrElement<T>[];
    /**
     * One-to-many navigation property to the [[SalesOrderItemRelatedObject]] entity.
     */
    toRelatedObject: SalesOrderItemRelatedObject<T>[];
    /**
     * One-to-one navigation property to the [[SalesOrder]] entity.
     */
    toSalesOrder?: SalesOrder<T> | null;
    /**
     * One-to-many navigation property to the [[SalesOrderScheduleLine]] entity.
     */
    toScheduleLine: SalesOrderScheduleLine<T>[];
    /**
     * One-to-many navigation property to the [[SalesOrderItmSubsqntProcFlow]] entity.
     */
    toSubsequentProcFlowDocItem: SalesOrderItmSubsqntProcFlow<T>[];
    /**
     * One-to-many navigation property to the [[SalesOrderItemText]] entity.
     */
    toText: SalesOrderItemText<T>[];
}
export interface SalesOrderItemType<T extends DeSerializers = DefaultDeSerializers> {
    salesOrder: DeserializedType<T, 'Edm.String'>;
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    higherLevelItem?: DeserializedType<T, 'Edm.String'> | null;
    higherLevelItemUsage?: DeserializedType<T, 'Edm.String'> | null;
    salesOrderItemCategory?: DeserializedType<T, 'Edm.String'> | null;
    salesOrderItemText?: DeserializedType<T, 'Edm.String'> | null;
    purchaseOrderByCustomer?: DeserializedType<T, 'Edm.String'> | null;
    purchaseOrderByShipToParty?: DeserializedType<T, 'Edm.String'> | null;
    underlyingPurchaseOrderItem?: DeserializedType<T, 'Edm.String'> | null;
    externalItemId?: DeserializedType<T, 'Edm.String'> | null;
    material?: DeserializedType<T, 'Edm.String'> | null;
    materialByCustomer?: DeserializedType<T, 'Edm.String'> | null;
    pricingDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    pricingReferenceMaterial?: DeserializedType<T, 'Edm.String'> | null;
    billingPlan?: DeserializedType<T, 'Edm.String'> | null;
    requestedQuantity?: DeserializedType<T, 'Edm.Decimal'> | null;
    requestedQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    requestedQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    requestedQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    orderQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    orderQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    orderQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    confdDelivQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    itemGrossWeight?: DeserializedType<T, 'Edm.Decimal'> | null;
    itemNetWeight?: DeserializedType<T, 'Edm.Decimal'> | null;
    itemWeightUnit?: DeserializedType<T, 'Edm.String'> | null;
    itemWeightSapUnit?: DeserializedType<T, 'Edm.String'> | null;
    itemWeightIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    itemVolume?: DeserializedType<T, 'Edm.Decimal'> | null;
    itemVolumeUnit?: DeserializedType<T, 'Edm.String'> | null;
    itemVolumeSapUnit?: DeserializedType<T, 'Edm.String'> | null;
    itemVolumeIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    transactionCurrency?: DeserializedType<T, 'Edm.String'> | null;
    netAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    totalSdDocReferenceStatus?: DeserializedType<T, 'Edm.String'> | null;
    sdDocReferenceStatus?: DeserializedType<T, 'Edm.String'> | null;
    materialSubstitutionReason?: DeserializedType<T, 'Edm.String'> | null;
    materialGroup?: DeserializedType<T, 'Edm.String'> | null;
    materialPricingGroup?: DeserializedType<T, 'Edm.String'> | null;
    additionalMaterialGroup1?: DeserializedType<T, 'Edm.String'> | null;
    additionalMaterialGroup2?: DeserializedType<T, 'Edm.String'> | null;
    additionalMaterialGroup3?: DeserializedType<T, 'Edm.String'> | null;
    additionalMaterialGroup4?: DeserializedType<T, 'Edm.String'> | null;
    additionalMaterialGroup5?: DeserializedType<T, 'Edm.String'> | null;
    billingDocumentDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    contractAccount?: DeserializedType<T, 'Edm.String'> | null;
    additionalValueDays?: DeserializedType<T, 'Edm.String'> | null;
    servicesRenderedDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    batch?: DeserializedType<T, 'Edm.String'> | null;
    productionPlant?: DeserializedType<T, 'Edm.String'> | null;
    storageLocation?: DeserializedType<T, 'Edm.String'> | null;
    deliveryGroup?: DeserializedType<T, 'Edm.String'> | null;
    shippingPoint?: DeserializedType<T, 'Edm.String'> | null;
    shippingType?: DeserializedType<T, 'Edm.String'> | null;
    deliveryPriority?: DeserializedType<T, 'Edm.String'> | null;
    deliveryDateTypeRule?: DeserializedType<T, 'Edm.String'> | null;
    incotermsClassification?: DeserializedType<T, 'Edm.String'> | null;
    incotermsTransferLocation?: DeserializedType<T, 'Edm.String'> | null;
    incotermsLocation1?: DeserializedType<T, 'Edm.String'> | null;
    incotermsLocation2?: DeserializedType<T, 'Edm.String'> | null;
    taxAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    productTaxClassification1?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification2?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification3?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification4?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification5?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification6?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification7?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification8?: DeserializedType<T, 'Edm.String'> | null;
    productTaxClassification9?: DeserializedType<T, 'Edm.String'> | null;
    matlAccountAssignmentGroup?: DeserializedType<T, 'Edm.String'> | null;
    costAmount?: DeserializedType<T, 'Edm.Decimal'> | null;
    customerPaymentTerms?: DeserializedType<T, 'Edm.String'> | null;
    fixedValueDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    customerGroup?: DeserializedType<T, 'Edm.String'> | null;
    salesDocumentRjcnReason?: DeserializedType<T, 'Edm.String'> | null;
    itemBillingBlockReason?: DeserializedType<T, 'Edm.String'> | null;
    slsDocIsRlvtForProofOfDeliv?: DeserializedType<T, 'Edm.Boolean'> | null;
    wbsElement?: DeserializedType<T, 'Edm.String'> | null;
    profitCenter?: DeserializedType<T, 'Edm.String'> | null;
    accountingExchangeRate?: DeserializedType<T, 'Edm.Decimal'> | null;
    referenceSdDocument?: DeserializedType<T, 'Edm.String'> | null;
    referenceSdDocumentItem?: DeserializedType<T, 'Edm.String'> | null;
    sdProcessStatus?: DeserializedType<T, 'Edm.String'> | null;
    deliveryStatus?: DeserializedType<T, 'Edm.String'> | null;
    orderRelatedBillingStatus?: DeserializedType<T, 'Edm.String'> | null;
    toBillingPlan?: SalesOrderItemBillingPlanType<T> | null;
    toPartner: SalesOrderItemPartnerType<T>[];
    toPrecedingProcFlowDocItem: SalesOrderItmPrecdgProcFlowType<T>[];
    toPricingElement: SalesOrderItemPrElementType<T>[];
    toRelatedObject: SalesOrderItemRelatedObjectType<T>[];
    toSalesOrder?: SalesOrderType<T> | null;
    toScheduleLine: SalesOrderScheduleLineType<T>[];
    toSubsequentProcFlowDocItem: SalesOrderItmSubsqntProcFlowType<T>[];
    toText: SalesOrderItemTextType<T>[];
}
//# sourceMappingURL=SalesOrderItem.d.ts.map