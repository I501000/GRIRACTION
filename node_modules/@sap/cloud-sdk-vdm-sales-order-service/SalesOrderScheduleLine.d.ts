import { Entity, DefaultDeSerializers, DeSerializers, DeserializedType } from '@sap-cloud-sdk/odata-v2';
/**
 * This class represents the entity "A_SalesOrderScheduleLine" of service "API_SALES_ORDER_SRV".
 */
export declare class SalesOrderScheduleLine<T extends DeSerializers = DefaultDeSerializers> extends Entity implements SalesOrderScheduleLineType<T> {
    /**
     * Technical entity name for SalesOrderScheduleLine.
     */
    static _entityName: string;
    /**
     * Default url path for the according service.
     */
    static _defaultServicePath: string;
    /**
     * All key fields of the SalesOrderScheduleLine entity
     */
    static _keys: string[];
    /**
     * Sales Document.
     * The number that uniquely identifies the sales document.
     * Maximum length: 10.
     */
    salesOrder: DeserializedType<T, 'Edm.String'>;
    /**
     * Sales Document Item.
     * The number that uniquely identifies the item in the sales document.
     * Maximum length: 6.
     */
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    /**
     * Schedule Line Number.
     * The number that uniquely identifies the schedule line in the sales document.
     * When an item has more than one schedule line, the system automatically assigns a unique number to each line. The number is displayed in the details screens for schedule lines.The schedule line number serves internal purposes and does not, for example, determine the sequence of schedule lines in the overview screen. The schedule lines on the overview screen are sorted by date.
     * Maximum length: 4.
     */
    scheduleLine: DeserializedType<T, 'Edm.String'>;
    /**
     * Requested Delivery Date.
     * @nullable
     */
    requestedDeliveryDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Confirmed Delivery Date.
     * @nullable
     */
    confirmedDeliveryDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    /**
     * Sales Unit.
     * Unit of measure  in which the material is sold.
     * Maximum length: 3.
     * @nullable
     */
    orderQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * SAP Unit Code for Order Quantity.
     * Unit of measure (SAP code) for the order quantity.
     * For the order quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    orderQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * ISO Unit Code for Order Quantity.
     * Unit of measure (ISO code) for the order quantity.
     * For the order quantity, you can use either the language-dependent unit code, the ISO code, or the SAP code (the format found in the database without conversions).
     * Maximum length: 3.
     * @nullable
     */
    orderQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    /**
     * Order Quantity in Sales Units.
     * Required order quantity in an individual schedule line.
     * If you change the required order quantity in the schedule line, the system re-rounds the quantities, determines the rounded quantity, and re-runs the availability check based on the rounded quantity. The required order quantity remains as the orginal quantity (before rounding) in the schedule line.If the system does not round up the quantity, this means that the required order quantity matches the rounded quantity.
     * @nullable
     */
    scheduleLineOrderQuantity?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Confirmed Quantity.
     * The item quantity that the system confirms for shipping after checking inventory availability.
     * The confirmed quantity can differ from the order quantity (for example, insufficient stock is available to meet the customer's request). If the availability of inventory changes during delivery processing, the confirmed quantity can also differ from the delivered quantity that the customer actually receives.If you change the order quantity (for example, if you create new schedule lines for the item), the system updates the confirmed quantity (depending on availability).
     * @nullable
     */
    confdOrderQtyByMatlAvailCheck?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Delivered Quantity.
     * @nullable
     */
    deliveredQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Open Confirmed Delivery Quantity.
     * @nullable
     */
    openConfdDelivQtyInOrdQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Corrected quantity in sales unit.
     * Rounded quantity of the required quantity in the schedule line in the sales order.
     * The system rounds the quantity using the rounding profiles from the customer-material info record or the material master record. The profile can be switched on for each customer.If you change the rounded quantity, the system automatically performs an availability check and/or delivery scheduling and updates the confirmed quantity. The rounded quantity is cumulated in the total order quantity of the item. The required order quantity remains as the original quantity (before rounding) in the schedule line.If the system does not round the quantity, the rounded quantity of the required order quantity in the schedule line is valid.
     * @nullable
     */
    correctedQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    /**
     * Schedule Line Blocked for Delivery.
     * Indicates if a schedule line for the item is blocked for delivery.
     * Maximum length: 2.
     * @nullable
     */
    delivBlockReasonForSchedLine?: DeserializedType<T, 'Edm.String'> | null;
}
export interface SalesOrderScheduleLineType<T extends DeSerializers = DefaultDeSerializers> {
    salesOrder: DeserializedType<T, 'Edm.String'>;
    salesOrderItem: DeserializedType<T, 'Edm.String'>;
    scheduleLine: DeserializedType<T, 'Edm.String'>;
    requestedDeliveryDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    confirmedDeliveryDate?: DeserializedType<T, 'Edm.DateTime'> | null;
    orderQuantityUnit?: DeserializedType<T, 'Edm.String'> | null;
    orderQuantitySapUnit?: DeserializedType<T, 'Edm.String'> | null;
    orderQuantityIsoUnit?: DeserializedType<T, 'Edm.String'> | null;
    scheduleLineOrderQuantity?: DeserializedType<T, 'Edm.Decimal'> | null;
    confdOrderQtyByMatlAvailCheck?: DeserializedType<T, 'Edm.Decimal'> | null;
    deliveredQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    openConfdDelivQtyInOrdQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    correctedQtyInOrderQtyUnit?: DeserializedType<T, 'Edm.Decimal'> | null;
    delivBlockReasonForSchedLine?: DeserializedType<T, 'Edm.String'> | null;
}
//# sourceMappingURL=SalesOrderScheduleLine.d.ts.map