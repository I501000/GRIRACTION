"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.functionImportReturnType = exports.actionImportReturnType = void 0;
const common_1 = require("../edmx-to-vdm/common");
function actionFunctionImportReturnType(actionOrFunctionImport, requestBuilderName) {
    let type = actionOrFunctionImport.returnType.returnType;
    const returnType = actionOrFunctionImport.returnType;
    if ((0, common_1.isEntityNotDeserializable)(returnType)) {
        type = wrapRequestBuilderAroundType(requestBuilderName, actionOrFunctionImport.parametersTypeName, type);
        type = `Omit<${type}, 'execute'>`;
        return type;
    }
    if (returnType.isCollection) {
        type = `${type}[]`;
    }
    if (returnType.isNullable) {
        type = `${type} | null`;
    }
    type = wrapRequestBuilderAroundType(requestBuilderName, actionOrFunctionImport.parametersTypeName, type);
    return type;
}
function wrapRequestBuilderAroundType(requestBuilderName, parameterName, type) {
    return `${requestBuilderName}<DeSerializersT, ${parameterName}<DeSerializersT>, ${type}>`;
}
/**
 * @internal
 */
function actionImportReturnType(actionImport) {
    return actionFunctionImportReturnType(actionImport, 'ActionImportRequestBuilder');
}
exports.actionImportReturnType = actionImportReturnType;
/**
 * @internal
 */
function functionImportReturnType(actionImport) {
    return actionFunctionImportReturnType(actionImport, 'FunctionImportRequestBuilder');
}
exports.functionImportReturnType = functionImportReturnType;
//# sourceMappingURL=return-type.js.map