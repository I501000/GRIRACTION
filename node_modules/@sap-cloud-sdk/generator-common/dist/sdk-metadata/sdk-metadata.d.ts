import { Client, GenerationAndUsage, PregeneratedLibrary, SdkMetadataHeader, ServiceStatus } from './sdk-metadata-types';
/**
 * @internal
 */
export declare function getSdkMetadataFileNames(originalFileName: string): {
    clientFileName: string;
    headerFileName: string;
};
/**
 * @internal
 */
export declare function sdkMetadataHeader(type: 'odata' | 'rest' | 'soap', originalFileName: string, versionInPackageJson?: string): Promise<SdkMetadataHeader>;
/**
 * @internal
 */
export declare function getVersionForClient(versionInPackageJson?: string): Promise<string>;
/**
 * @internal
 */
export declare function getSdkMetadataClient(generationAndUsage: GenerationAndUsage, pregeneratedLibrary?: PregeneratedLibrary): Client;
/**
 * Gets the closest matching object using Levenshtein distance algorithm.
 * @param name - Name of the service or api class.
 * @param objectsToCheck - List of objects, e.g. VdmEntity, FunctionImports, etc.
 * @param extractorFn - Function to get the object's property to match against name.
 * @returns - closest matched object or undefined if not found.
 * @internal
 */
export declare function getLevenshteinClosest<T>(name: string, objectsToCheck: T[], extractorFn: (x: T) => string): T | undefined;
/**
 * @internal
 */
export declare const sdkMetadataHeaderIntroText = "The SAP Cloud SDK is a versatile set of libraries and tools for developers to build cloud-native applications on the SAP Business Technology Platform. To simplify the consumption of multiple services published on the SAP API Business Hub, the SDK offers code generators for OData and OpenAPI together with pregenerated typed client libraries. These libraries are seamlessly integrated with connectivity, authentication, multi-tenancy, and other abstractions to speed up application development.";
/**
 * @internal
 */
export declare const ServiceStatusValues: Record<ServiceStatus['status'], ServiceStatus>;
//# sourceMappingURL=sdk-metadata.d.ts.map