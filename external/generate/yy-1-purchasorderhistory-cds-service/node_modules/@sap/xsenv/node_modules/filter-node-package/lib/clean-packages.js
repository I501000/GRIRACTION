#!/usr/bin/env node

'use strict';

var commander = require('commander');
var fs = require('fs');
var glob = require('glob');

var clean = require('./clean-bundle');
var filter = require('./filter-package');
var findInternalContent = require('./find-internal');

commander
  .option('-w, --warn-only', 'Do not fail on internal content, but only log warnings')
  .option('-v, --verbose', 'Print detailed messages')
  .option('-i, --integrity', 'Remove integrity properties from package lock files')
  .parse(process.argv);

var filterFiles = ['./package.json'];
if (fs.existsSync('./package-lock.json')) {
  filterFiles.push('./package-lock.json');
}
if (fs.existsSync('./npm-shrinkwrap.json')) {
  filterFiles.push('./npm-shrinkwrap.json');
}
filterFiles = filterFiles.concat(
  glob.sync('node_modules/**/package.json'),
  glob.sync('node_modules/**/package-lock.json'),
  glob.sync('node_modules/**/npm-shrinkwrap.json'));

console.log('Filtering JSON files...');
filterFiles.forEach(function(f) {
  try {
    filter(f, commander);
  } catch (err) {
    console.error('Could not filter %s: %s', f, err.message);
  }
});
console.log('Filtering complete');

clean();

findInternalContent(commander.warnOnly);
